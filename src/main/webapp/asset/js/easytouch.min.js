(function () {
    $.EasyTouch = {Loading:{showLoading:function (a) {
        a = a || {};
        var b = a.msg || "", c = !!a.modal, d = t + "load", e = this.$el.children("." + d);
        return e.length ? e.text(b).data("modal", c).show() : this.$el.append('<div class="' + d + '" data-modal="' + c + '">' + b + "</div>"), this
    }, hideLoading:function () {
        return this.$el.children("." + t + "load").hide(), this
    }}, DelegateEvents:{delegateEvents:function (a) {
        if (!a)return this;
        var b = this;
        return this.undelegateEvents(), $.each(a, function (a, c) {
            $.each(c, function (c, d) {
                typeof d != "function" && (d = b[d]);
                var e = function (a) {
                    d.apply(b, [a, this])
                };
                c += ".delegateEvents" + b.id, a === "" ? b.$el.bind(c, e) : b.$el.delegate(a, c, e)
            })
        }), this
    }, undelegateEvents:function () {
        return this.$el.unbind(".delegateEvents" + this.id), this
    }}};
    var a = "pagebeforechange", b = "pagechange", c = "pagebeforeback", d = "pageback", e = "pagenav", f = "pagebeforenav", g = "pagebeforeload", h = "pageload", i = "pageloadfailed", j = "appexit", k = "appreset", l = "appback", m = "appnav", n = "appbeforenav", o = "appbeforeload", p = "appload", q = "apploadfailed", r = 0, s = "easytouch", t = "et-", u = "easytouch:page_history", v = "easytouch-childapp", w = function (a, b) {
        var c = function (a) {
            var b = {Top:"Bottom", Bottom:"Top", Left:"Right", Right:"Left", In:"Out", Out:"In"};
            return b[a] || a
        };
        return b = b || /Left|Right|Top|Bottom|In|Out/g, a.replace(b, c)
    };
    $.EasyTouch.App = $.Base.build("$.EasyTouch.App", {id:"easytouch", container:"body", hashChange:!0, ifShowLoading:!0, defaultAnimation:undefined, events:{}, pages:{}, apps:{}, el:undefined, $el:undefined, _pages:{}, _apps:{}, _history:[], host:undefined, _active:!0, initializer:function (a) {
        if (window.location.href.indexOf(v) !== -1) {
            this.host = {window:window.parent}, this.host.window.postMessage({id:this.id, event:p}, "*");
            try {
                a = JSON.parse(decodeURIComponent(window.location.hash.substring(v.length + 2)))
            } catch (c) {
            }
        }
        console.log("[EasyTouch] initializer", a);
        var d = this;
        this.history = this.history(), this.$el = typeof this.container == "string" ? $(this.container) : this.container, this.$el.addClass(s), this.el = this.$el[0], this.delegateEvents(this.events);
        var e = function (a) {
            $.each(d._apps, function (b, c) {
                c.window.postMessage({id:b, event:a}, "*")
            })
        };
        this.ifShowLoading && (this.bind(g, function () {
            d.showLoading()
        }), this.bind(h, function () {
            d.hideLoading()
        }), this.bind(i, function () {
            d.hideLoading()
        }), this.bind(o, function () {
            d.showLoading()
        }), this.bind(p, function () {
            d.hideLoading()
        }), this.bind(q, function () {
            d.hideLoading()
        })), this.bind(q, function (a, b) {
            var c = this._apps[b.id];
            c && (c.$el.remove(), delete this._apps[b.id])
        }, this), window.addEventListener("message", function (a) {
            console.log("[EasyTouch] onmessage", a);
            var b = a.data, c = b.event;
            c === j ? d._apps[b.id] && (d._apps[b.id].$el.hide(), d._active = !0, d.trigger(l, b)) : c === k ? (d.reset(b.data), d.trigger(k, b)) : c === p ? d._apps[b.id] && (d._apps[b.id].loaded = !0) : ["resume", "pause", "backbutton", "resetbutton"].indexOf(c) !== -1 && $(document).trigger(c)
        }), this.hashChange && (this.bind(b, function (a, b) {
            if (b.direction === "backward") {
                var c = decodeURIComponent(window.location.hash.substring(1));
                try {
                    c = JSON.parse(c);
                    if (!c.id) {
                        console.log("[EasyTouch] hashchange", "first page");
                        return
                    }
                    if (c.id === d.getCurrentPID()) {
                        console.log("[EasyTouch] hashchange", c.id + " is current page");
                        return
                    }
                    window.history.back()
                } catch (e) {
                    console.log("[EasyTouch] hashchange", "parse hash error")
                }
            } else {
                if (d.history.getIndex() === 0)return;
                var f = {id:b.to, data:b.data || {}};
                window.location.hash = encodeURIComponent(JSON.stringify(f))
            }
        }), window.addEventListener("hashchange", function () {
            try {
                var a = decodeURIComponent(window.location.hash.substring(1));
                a = a ? JSON.parse(a) : {};
                var b = a.id, c = d._history[d.history.getIndex() - 1];
                b && !d.pages[b] ? console.log("[EasyTouch] hashchange", b + " is not exist") : d.getCurrentPID() === b ? console.log("[EasyTouch] hashchange", b + " is current page") : c && c.id === b ? (console.log("[EasyTouch] hashchange", "pageBack"), d.pageBack(a.data, a.anim)) : b ? (console.log("[EasyTouch] hashchange", "navPage"), d.navPage(b, a.data, a.anim, !0)) : (console.log("[EasyTouch] hashchange", "pageBack"), d.pageBack())
            } catch (e) {
                console.log("[EasyTouch] hashchange", "parse hash error")
            }
        })), this.init(a)
    }, init:function (a) {
        console.log("[EasyTouch] init", arguments)
    }, reset:function (a) {
        console.log("[EasyTouch] reset", arguments)
    }, exit:function (a) {
        console.log("[EasyTouch] exit", arguments);
        if (this.host) {
            var b = {id:this.id, data:a, event:j};
            this.host.window.postMessage(b, "*"), this.trigger(j, b)
        } else navigator.app.exit();
        return this
    }, navApp:function (a, b) {
        var c = this, d = $.extend({}, b);
        b = {id:a, data:b}, this.trigger(n, b);
        if (this._apps[a])this._apps[a].window.postMessage({id:a, event:k, data:d}, "*"), this._apps[a].$el.show(); else {
            var e = this.apps[a];
            try {
                e += "#" + v + "=" + encodeURIComponent(JSON.stringify(d))
            } catch (f) {
            }
            this.trigger(o, b);
            var g = $('<iframe src="' + e + '" class="' + t + 'app"></iframe>').bind("load",function (d) {
                setTimeout(function () {
                    c._apps[a].loaded ? c.trigger(p, b) : c.trigger(q, b)
                }, 500)
            }).bind("error",function (a) {
                c.trigger(q, b)
            }).css({height:document.height, width:document.width, display:"block"}).appendTo(this.$el);
            this._apps[a] = {$el:g, el:g[0], window:g[0].contentWindow}
        }
        return this._active = !1, this.trigger(m, b), this
    }, getApp:function (a) {
        return this._apps[a]
    }, navPage:function (c, d, g, h) {
        if (!this.pages[c])return console.log("[EasyTouch] navPage", c + " is not exist"), this;
        var i = 0, j = this.history.getIndex();
        if (j < this._history.length - 1) {
            var k = this._history[j + 1];
            k.id === c ? (this._pages[c] || (d = d || k.data, g = g || k.anim), i = 2) : c === this.getCurrentPID() ? i = 3 : i = 1
        }
        g = g || this.defaultAnimation, console.log("[EasyTouch] navPage", arguments);
        var l = this, m = [c, d, g, h], n = this.getCurrentPage(), o = d ? $.extend({}, d) : d, p = function (a, b, c, d) {
            if (d === !1)return;
            if (i === 2)l.history.update(j + 1, {data:b, anim:c}), l.history.setCurrent(j + 1); else if (i === 1) {
                var e = [];
                for (var f = 0, g = l._history.length; f < g; f++) {
                    var h = l._history[f];
                    if (!(f <= j))break;
                    e.push(h)
                }
                l._history = e, l.history.push({id:a, data:b, anim:c})
            } else i === 3 ? l.history.update(j, {data:b, anim:c}) : l.history.push({id:a, data:b, anim:c})
        };
        if (n && n.id === c)return n.trigger(z, o), p.apply(l, m), this;
        var q = {from:n ? n.id : undefined, to:c, data:d, anim:g, direction:"forward"}, r = function () {
            l.trigger(e, q), l.trigger(b, q)
        }, s = function (a, b) {
            a && a.trigger(A), b.trigger(B, d)
        };
        return this.trigger(f, q), this.trigger(a, q), p.apply(l, m), this._pages[c] ? (this._pages[c].trigger(z, o), r(), l._transitionPages(n, this._pages[c], d, g, s)) : l._createPage(c, o, function (a) {
            r(), l._transitionPages(n, a, d, g, s)
        }), this
    }, pageBack:function (e, f) {
        console.log("[EasyTouch] pageBack", arguments);
        if (this._history.length && this.history.getIndex() === 0)return this.exit(), this;
        var g = this, h, i = g.getCurrentPage(), j = g.history.getIndex(), k = this._history[j - 1], l = this._history[j], m = k.id, n, o = function () {
            g.trigger(d, n), g.trigger(b, n)
        }, p = function (a, b) {
            a.trigger(A), b.trigger(B, e)
        };
        return e = (this._pages[m] ? e : k.data) || undefined, f = f || l.anim, f = f ? w(f, /Left|Right|Top|Bottom/g) : undefined, n = {from:l.id, to:k.id, data:e, anim:f, direction:"backward"}, this.trigger(c, n), this.trigger(a, n), g.history.setCurrent(j - 1), h = e ? $.extend({}, e) : e, this._pages[m] ? (this._pages[m].trigger(z, h), o(), this._transitionPages(i, this._pages[m], e, f, p)) : this._createPage(m, h, function (a) {
            o(), g._transitionPages(i, a, e, f, p)
        }), this
    }, _transitionPages:function (a, b, c, d, e) {
        var f = this, g = b.$el;
        if (!a)return this.$el.find("." + t + "page").removeClass("current"), g.addClass("current"), e && e(a, b), this;
        var h = a.$el;
        if (d && d !== "none") {
            d = t + d;
            var i = w(d);
            this._transitionCallbacks && (this._transitionCallbacks.from(), this._transitionCallbacks.to()), this._transitionCallbacks = {from:function () {
                h.unbind("webkitAnimationEnd", this.from).removeClass("current " + i)
            }, to:function () {
                g.unbind("webkitAnimationEnd", this.to).removeClass(d), f.$el.removeClass("animating"), delete f._transitionCallbacks, e && e(a, b)
            }}, h.bind("webkitAnimationEnd", this._transitionCallbacks.from), g.bind("webkitAnimationEnd", this._transitionCallbacks.to), this.$el.addClass("animating"), h.addClass(i), g.addClass(d + " current")
        } else h.removeClass("current"), g.addClass("current"), e && e(a, b);
        return this
    }, _createPage:function (a, b, c) {
        return typeof this.pages[a] != "function" && (this.pages[a] = $.EasyTouch.Page.extend(this.pages[a])), this._pages[a] = new this.pages[a]({id:a, data:b, app:this}), c && (this._pages[a]._inited ? c(this._pages[a]) : this._pages[a].bind(y, function () {
            c(this)
        })), this
    }, addPage:function (a, b) {
        return this.pages[a] = b, this
    }, removePage:function (a) {
        return delete this.pages[a], delete this._pages[a], this.history.remove(a), this
    }, destroyPage:function (a) {
        return this._pages[a] && this._pages[a].destroy(), this
    }, getPage:function (a) {
        return this._pages[a]
    }, getCurrentPage:function () {
        return this._pages[this._history.length && this._history[this.history.getIndex()].id]
    }, getCurrentPID:function () {
        return this._history.length ? this._history[this.history.getIndex()].id : undefined
    }, history:function () {
        var a = this, b, c = a.id + ":" + u;
        return sessionStorage.getItem(c) && (this._history = JSON.parse(sessionStorage.getItem(c))), {start:function (c) {
            b = !0;
            if (a._history.length) {
                var d = a._history[a.history.getIndex()];
                a.navPage(d.id, d.data)
            } else a.navPage(c.id, c.data)
        }, getIndex:function () {
            for (var b = 0, c = a._history.length; b < c; b++)if (a._history[b].on)return b
        }, setCurrent:function (b) {
            a._history = a._history.map(function (a, c) {
                return b === c ? a.on = !0 : a.on && delete a.on, a
            }), a.history.save()
        }, update:function (b, c) {
            $.extend(!0, a._history[b], c), a.history.save()
        }, pop:function () {
            a._history.pop(), a.history.save()
        }, remove:function (b) {
            a._history = a._history.filter(function (a) {
                return a.id !== b
            }), a.history.save()
        }, push:function (b) {
            var c = a.getCurrentPID(), d = a.history.getIndex();
            c && delete a._history[d].on, b.on = !0, b.id !== c ? a._history.push(b) : b.id === c && (a._history[d].data = b.data, a._history[d].on = !0), a.history.save()
        }, clear:function () {
            a._history = [], a.history.save()
        }, save:function () {
            if (!b)return;
            sessionStorage.setItem(c, JSON.stringify(a._history))
        }}
    }}, {}, {extend:function (a) {
        a.super = $.EasyTouch.App.prototype;
        var b = $.Base.extend("$.EasyTouch.App", this, a);
        return b.extend = this.extend, b
    }}), $.EasyTouch.App.prototype.go = $.EasyTouch.App.prototype.navPage, $.EasyTouch.App.prototype.back = $.EasyTouch.App.prototype.pageBack, $.extend($.EasyTouch.App.prototype, $.EasyTouch.DelegateEvents), $.extend($.EasyTouch.App.prototype, $.EasyTouch.Loading);
    var x = "pagebeforeinit", y = "pageinit", z = "pagereset", A = "pageleave", B = "pageready", C = /^[\S]+\.html$/i, D = /^[a-zA-Z0-9\.#>\[\]'"=\s~\*\+:\(\)\-\$\^]+$/i;
    $.EasyTouch.Page = $.Base.build("$.EasyTouch.Page", {html:undefined, tpl:undefined, id:undefined, events:{}, app:undefined, el:undefined, $el:undefined, _inited:!1, initializer:function (a) {
        console.log("[EasyTouch.Page] " + a.id + " initializer", arguments), this.app = a.app;
        var b = this, c = a.data, d = {id:a.id, data:$.extend({}, c)}, e = function (d) {
            d.attr("id") || d.attr("id", a.id), d.addClass(t + "page"), d.parent().hasClass(s) || b.app.$el.append(d), b.id = a.id, b.$el = d, b.el = d[0], setTimeout(function () {
                b.delegateEvents(b.events), b.trigger(x, $.extend({}, c)), b.init($.extend({}, c)), b._inited = !0, b.trigger(y, $.extend({}, c))
            }, r)
        };
        this.bind(z, function (a, c) {
            b.reset(c)
        }), this.bind(A, function () {
            b.leave()
        }), this.bind(B, function (a, c) {
            b.ready(c)
        }), this.html ? C.test(this.html) ? (this.app.trigger(g, d), $.ajax({url:this.html, success:function (a) {
            b.app.trigger(h, d), e($(a))
        }, error:function () {
            b.app.trigger(i, d)
        }})) : typeof this.html == "string" || this.html.tagName ? e($(this.html)) : e(this.html) : this.tpl ? C.test(this.tpl) ? (this.app.trigger(g, d), $.ajax({url:this.tpl, success:function (a) {
            b.app.trigger(h, d), a = b.render(a, c), e($(a))
        }, error:function () {
            b.app.trigger(i, d)
        }})) : D.test(this.tpl) || this.tpl.tagName ? e($(b.render($(this.tpl).html(), c))) : this.tpl instanceof $ || this.tpl instanceof $.zepto.Z ? e($(b.render(this.tpl.html(), c))) : e($(b.render(this.tpl, c))) : console.error("html or tpl is require")
    }, render:function (a, b) {
        return console.log("[EasyTouch.Page] render"), a
    }, init:function (a) {
        console.log("[EasyTouch.Page] " + this.id + " init", arguments)
    }, reset:function (a) {
        console.log("[EasyTouch.Page] " + this.id + " reset", arguments)
    }, ready:function (a) {
        console.log("[EasyTouch.Page] " + this.id + " ready", arguments)
    }, leave:function () {
        console.log("[EasyTouch.Page] " + this.id + " leave")
    }, destroy:function () {
        this.undelegateEvents(), this.app.removePage(this.id), this.$el.remove()
    }}, {id:{}, app:{}, data:{}}, {extend:function (a) {
        a.super = $.EasyTouch.Page.prototype;
        var b = $.Base.extend("$.EasyTouch.Page", this, a);
        return b.extend = this.extend, b
    }}), $.extend($.EasyTouch.Page.prototype, $.EasyTouch.DelegateEvents), $.extend($.EasyTouch.Page.prototype, $.EasyTouch.Loading)
})(), function () {
    var a = "dataerror", b = "save", c = "change", d = "reset", e = "remove", f = "beforeSend", g = "success", h = "complete", i = "error";
    $.EasyTouch.Model = $.Base.build("$.EasyTouch.Model", {id:undefined, cache:!1, cacheSize:10, maxAge:0, defaults:undefined, fallback:undefined, lists:undefined, server:{}, watch:{}, attrs:undefined, data:undefined, initializer:function (a) {
        this.attrs = {}, this.lists = [], this.id = this.id || (new Date).getTime(), this.defaults && this.reset(this.defaults), this.init(a)
    }, init:function (a) {
    }, set:function (a, b) {
        return this.data = this.data || {}, typeof a == "object" ? $.extend(this.data, a) : this.data[a] = b, this.trigger(c, this.clone()), this
    }, get:function (a) {
        var b = this.data;
        return a.split(".").forEach(function (a) {
            b = b ? b[a] : undefined
        }), b
    }, parse:function (a) {
        return a
    }, validate:function (a) {
        return!0
    }, _watch:function (a) {
        var b = this;
        return $.each(b.watch, function (c, d) {
            var e;
            d.split(".").forEach(function (b) {
                e = e ? e[b] : a[b]
            }), b.attrs[c] = e
        }), this
    }, clone:function (a) {
        a = a || this.data;
        var b = Object.prototype.toString.apply(a);
        return b === "[object Array]" ? $.extend(!0, [], a) : b === "[object Object]" ? $.extend(!0, {}, a) : a
    }, toJSON:function () {
        return this.clone()
    }, save:function (a, c) {
        var d = this;
        return this.ajax(a, function (a) {
            c && c.apply(d, arguments), a || d.trigger(b, d.clone())
        }), this
    }, remove:function (a, b) {
        var c = this;
        return this.ajax(a, function (a) {
            a || c.destroy(), b && b.apply(c, arguments), a || c.trigger(e)
        }), this
    }, _isExpired:function (a) {
        var b = this, c = localStorage[this._generateKey()];
        if (!c)return!0;
        try {
            a = a ? JSON.stringify(a) : "";
            var d = !0;
            return c = JSON.parse(c), c.forEach(function (c) {
                a === c.key && (d = (new Date).getTime() - c.lastModified > b.maxAge)
            }), d
        } catch (e) {
            return!0
        }
    }, _saveToLocal:function (a, b) {
        if (!this.cache)return;
        var c = this._generateKey();
        try {
            var d = localStorage[c], e = !1, f = (new Date).getTime();
            b = b ? JSON.stringify(b) : "", d = d ? JSON.parse(d) : [], d = d.map(function (c) {
                return c.key === b && (e = !0, c.data = a, c.lastModified = f), c
            }), e || d.unshift({key:b, lastModified:f, data:a}), d.length > this.cacheSize && (d.length = this.cacheSize), localStorage[c] = JSON.stringify(d)
        } catch (g) {
            localStorage[c] = ""
        }
    }, _generateKey:function () {
        return"easytouch:model:" + this.id
    }, _reverse:function (a) {
        try {
            a = a ? JSON.stringify(a) : "";
            var b = localStorage[this._generateKey()];
            return b = JSON.parse(b), b = b.filter(function (b) {
                return a === b.key
            }), b[0].data
        } catch (c) {
        }
    }, _onLine:function () {
        return "onLine" in navigator ? navigator.onLine : !0
    }, fetch:function (a, b) {
        a = a || {};
        var c = this, d = $.extend(!0, {}, this.server.data, a.data), e = function (d) {
            a.success && a.success.apply(c, arguments), a.complete && a.complete.apply(c, arguments), c._watch(d), d = c.parse(d), c.reset(d, function (a) {
                b && b.apply(c, arguments)
            })
        }, f, g;
        c._key = d;
        if (this.cache && a.cache !== !1)if (this._onLine()) {
            if (!this._isExpired(d))return e(this._reverse(d))
        } else {
            f = this._reverse(d);
            if (f)return e(f)
        }
        if (this.fallback && !this._onLine() && !f) {
            if (typeof this.fallback != "string")return g = typeof this.fallback == "function" ? this.fallback() : this.fallback, e(g);
            d.fallback = 1, a.url = this.fallback
        }
        return this.ajax(a, function (a, e) {
            if (a) {
                b && b.apply(c, arguments);
                return
            }
            c._saveToLocal(e, d), c._watch(e), e = c.parse(e), c.reset(e, function () {
                b && b.apply(c, arguments)
            })
        }), this
    }, reset:function (a, b) {
        return this.data = a, b && b.call(this, null, a), this.trigger(d, this.clone()), this
    }, parseAjaxOptions:function (a) {
        return a
    }, ajax:function (b, c) {
        var d = this, e = $.extend(!0, {data:{}, type:"GET", dataType:"json"}, d.server), j = this.parseAjaxOptions($.extend(!0, e, b)), k = j.success, l = j.error, m = j.beforeSend, n = j.complete;
        return j.success = function (b, e, f) {
            k && k.apply(this, arguments);
            if (!d.validate(b)) {
                c && c.call(d, {message:"validate fails"}, b, e, f), d.trigger(a, b, e, f);
                return
            }
            c && c.call(d, null, b, e, f), d.trigger(g, b, e, f)
        }, j.error = function (a, b, e) {
            l && l.apply(this, arguments), c && c.call(d, {message:"connect fails"}, a, b, e), d.trigger(i, a, b, e)
        }, j.beforeSend = function (a, b) {
            m && m.apply(this, arguments), d.trigger(f, a, b)
        }, j.complete = function (a, b) {
            n && n.apply(this, arguments), d.trigger(h, a, b)
        }, console.log("[$.EasyTouch.Model][ajax]: " + j.url), $.ajax(j), this
    }, destroy:function () {
        var a = this;
        this.lists.forEach(function (b) {
            b.remove(a)
        })
    }}, {}, {extend:function (a) {
        a.super = $.EasyTouch.Model.prototype;
        var b = $.Base.extend("$.EasyTouch.Model", this, a);
        return b.extend = this.extend, b
    }})
}(), function () {
    var a = $.EasyTouch.Model, b = "dataerror", c = "create", d = "add", e = "remove", f = "change", g = "reset", h = "beforeSend", i = "success", j = "complete", k = "error";
    $.EasyTouch.ModelList = $.Base.build("$.EasyTouch.ModelList", {id:undefined, cache:!1, cacheSize:10, maxAge:0, defaults:undefined, fallback:undefined, model:undefined, server:{}, watch:{}, attrs:undefined, data:[], parse:function (a) {
        return a
    }, validate:function (a) {
        return!0
    }, initializer:function (b) {
        this.attrs = {}, this.model = this.model || a, this.id = this.id || (new Date).getTime(), this.defaults && this.reset(this.defaults), this.init(b)
    }, init:function (a) {
    }, _watch:function (a) {
        var b = this;
        $.each(b.watch, function (c, d) {
            var e;
            d.split(".").forEach(function (b) {
                e = e ? e[b] : a[b]
            }), b.attrs[c] = e
        })
    }, where:function (a) {
        return this.data.filter(function (b) {
            for (var c in a)if (a[c] !== b.get(c))return!1;
            return!0
        })
    }, toJSON:function (a) {
        return a = a || this.data, a.map(function (a) {
            return a.toJSON()
        })
    }, _isExpired:function (a) {
        var b = this, c = localStorage[this._generateKey()];
        if (!c)return!0;
        try {
            a = a ? JSON.stringify(a) : "";
            var d = !0;
            return c = JSON.parse(c), c.forEach(function (c) {
                a === c.key && (d = (new Date).getTime() - c.lastModified > b.maxAge)
            }), d
        } catch (e) {
            return!0
        }
    }, _saveToLocal:function (a, b) {
        if (!this.cache)return;
        var c = this._generateKey();
        try {
            var d = localStorage[c], e = !1, f = (new Date).getTime();
            b = b ? JSON.stringify(b) : "", d = d ? JSON.parse(d) : [], d = d.map(function (c) {
                return c.key === b && (e = !0, c.data = a, c.lastModified = f), c
            }), e || d.unshift({key:b, lastModified:f, data:a}), d.length > this.cacheSize && (d.length = this.cacheSize), localStorage[c] = JSON.stringify(d)
        } catch (g) {
            localStorage[c] = ""
        }
    }, _generateKey:function () {
        return"easytouch:modellist:" + this.id
    }, _reverse:function (a) {
        try {
            a = a ? JSON.stringify(a) : "";
            var b = localStorage[this._generateKey()];
            return b = JSON.parse(b), b = b.filter(function (b) {
                return a === b.key
            }), b[0].data
        } catch (c) {
            console.log("[EasyTouch][modellist][cache] reverse error - " + c.message)
        }
    }, _onLine:function () {
        return "onLine" in navigator ? navigator.onLine : !0
    }, next:function (a, b) {
        a = a || {};
        var c = this, d, e = $.extend(!0, {}, this.server.data, a.data), f = function (d) {
            a.success && a.success.apply(c, arguments), a.complete && a.complete.apply(c, arguments), c._watch(d), d = c.parse(d), c.add(d, function (a) {
                b && b.apply(c, arguments)
            })
        };
        if (this.cache && a.cache !== !1)if (this._onLine()) {
            if (!this._isExpired(e))return f(this._reverse(e))
        } else {
            d = this._reverse(e);
            if (d)return f(d)
        }
        return this.ajax(a, function (a, d) {
            if (a) {
                b && b.apply(c, arguments);
                return
            }
            c._saveToLocal(d, e), c._watch(d), d = c.parse(d), c.add(d, function () {
                b && b.apply(c, arguments)
            })
        }), this
    }, add:function (b, e) {
        var g = this;
        return Object.prototype.toString.apply(b) !== "[object Array]" && (b = [b]), b = b.map(function (b) {
            if (!(b instanceof a)) {
                var d = b;
                b = new g.model, b.reset(d), g.trigger(c, b)
            }
            return b.lists.indexOf(g) === -1 && b.lists.push(g), b
        }), this.data = this.data.concat(b), e && e.call(this, null, b), this.trigger(d, b), this.trigger(f, this.data), this
    }, fetch:function (a, b) {
        a = a || {};
        var c = this, d = $.extend(!0, {}, this.server.data, a.data), e = function (d) {
            a.success && a.success.apply(c, arguments), a.complete && a.complete.apply(c, arguments), c._watch(d), d = c.parse(d), c.reset(d, function () {
                b && b.apply(c, arguments)
            })
        }, f, g;
        c._key = d;
        if (this.cache && a.cache !== !1)if (this._onLine()) {
            if (!this._isExpired(d))return e(this._reverse(d))
        } else {
            f = this._reverse(d);
            if (f)return e(f)
        }
        if (this.fallback && !this._onLine() && !f) {
            if (typeof this.fallback != "string")return g = typeof this.fallback == "function" ? this.fallback() : this.fallback, e(g);
            d.fallback = 1, a.url = this.fallback
        }
        return this.ajax(a, function (a, e) {
            if (a) {
                b && b.apply(c, arguments);
                return
            }
            c._saveToLocal(e, d), c._watch(e), e = c.parse(e), c.reset(e, function () {
                b && b.apply(c, arguments)
            })
        }), this
    }, reset:function (b, d) {
        var e = this;
        return b = b.map(function (b) {
            if (!(b instanceof a)) {
                var d = b;
                b = new e.model, b.reset(d), e.trigger(c, b)
            }
            return b.lists.indexOf(e) === -1 && b.lists.push(e), b
        }), this.data = b, d && d.call(this, null, b), this.trigger(g, b), this.trigger(f, b), this
    }, parseAjaxOptions:function (a) {
        return a
    }, ajax:function (a, c) {
        var d = this, e = $.extend(!0, {data:{}, type:"GET", dataType:"json"}, d.server), f = this.parseAjaxOptions($.extend(!0, e, a)), g = f.success, l = f.error, m = f.beforeSend, n = f.complete;
        return f.success = function (a, e, f) {
            g && g.apply(this, arguments);
            if (!d.validate(a)) {
                c && c.call(d, {message:"validate fails"}, a, e, f), d.trigger(b, a, e, f);
                return
            }
            c && c.call(d, null, a, e, f), d.trigger(i, a, e, f)
        }, f.error = function (a, b, e) {
            l && l.apply(this, arguments), c && c.call(d, {message:"connect fails"}, a, b, e), d.trigger(k, a, b, e)
        }, f.beforeSend = function (a, b) {
            m && m.apply(this, arguments), d.trigger(h, a, b)
        }, f.complete = function (a, b) {
            n && n.apply(this, arguments), d.trigger(j, a, b)
        }, $.ajax(f), this
    }, remove:function (a) {
        var b = this, c = a;
        return c === undefined ? (c = [].concat(this.data), this.data = []) : (Object.prototype.toString.apply(c) !== "[object Array]" && (c = [c]), c.forEach(function (a) {
            b.data = b.data.filter(function (b) {
                return a !== b
            })
        })), this.trigger(e, c), this.trigger(f, this.data), this
    }}, {}, {extend:function (a) {
        a.super = $.EasyTouch.ModelList.prototype;
        var b = $.Base.extend("$.EasyTouch.ModelList", this, a);
        return b.extend = this.extend, b
    }})
}(), function () {
    $.EasyTouch.View = $.Base.build("$.EasyTouch.View", {id:undefined, container:undefined, model:undefined, tpl:undefined, events:{}, el:undefined, $el:undefined, initializer:function (a) {
        this.id = this.id || "$.EasyTouch.View." + (new Date).getTime(), console.log("[EasyTouch.View] " + this.id + " initializer", arguments);
        var b = this.container;
        b && (b.tagName ? (this.$el = $(b), this.el = b) : b instanceof $ || b instanceof $.zepto.Z ? (this.$el = b, this.el = b[0]) : (this.$el = $(b), this.el = this.$el[0]), this.delegateEvents(this.events)), this.init(a)
    }, init:function () {
        console.log("[EasyTouch.View] " + this.id + " init", arguments)
    }, render:function () {
        if (window.Mustache) {
            var a = Mustache.to_html(this.tpl, this.model.toJSON());
            this.$el ? this.$el.html(a) : (this.$el = $(a), this.el = this.$el[0], this.delegateEvents(this.events))
        }
        return this
    }, destroy:function () {
        this.undelegateEvents(), this.$el.remove()
    }}, {}, {extend:function (a) {
        a.super = $.EasyTouch.View.prototype;
        var b = $.Base.extend("$.EasyTouch.View", this, a);
        return b.extend = this.extend, b
    }}), $.extend($.EasyTouch.View.prototype, $.EasyTouch.DelegateEvents)
}();